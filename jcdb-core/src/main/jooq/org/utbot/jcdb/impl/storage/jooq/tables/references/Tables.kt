/*
 *  Copyright 2022 UnitTestBot contributors (utbot.org)
 * <p>
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package org.utbot.jcdb.impl.storage.jooq.tables.references


import org.utbot.jcdb.impl.storage.jooq.tables.Annotations
import org.utbot.jcdb.impl.storage.jooq.tables.Annotationvalues
import org.utbot.jcdb.impl.storage.jooq.tables.Builders
import org.utbot.jcdb.impl.storage.jooq.tables.Bytecodelocations
import org.utbot.jcdb.impl.storage.jooq.tables.Calls
import org.utbot.jcdb.impl.storage.jooq.tables.Classes
import org.utbot.jcdb.impl.storage.jooq.tables.Classhierarchies
import org.utbot.jcdb.impl.storage.jooq.tables.Classinnerclasses
import org.utbot.jcdb.impl.storage.jooq.tables.Fields
import org.utbot.jcdb.impl.storage.jooq.tables.Methodparameters
import org.utbot.jcdb.impl.storage.jooq.tables.Methods
import org.utbot.jcdb.impl.storage.jooq.tables.Outerclasses
import org.utbot.jcdb.impl.storage.jooq.tables.Symbols



/**
 * The table <code>Annotations</code>.
 */
val ANNOTATIONS = Annotations.ANNOTATIONS

/**
 * The table <code>AnnotationValues</code>.
 */
val ANNOTATIONVALUES = Annotationvalues.ANNOTATIONVALUES

/**
 * The table <code>Builders</code>.
 */
val BUILDERS = Builders.BUILDERS

/**
 * The table <code>BytecodeLocations</code>.
 */
val BYTECODELOCATIONS = Bytecodelocations.BYTECODELOCATIONS

/**
 * The table <code>Calls</code>.
 */
val CALLS = Calls.CALLS

/**
 * The table <code>Classes</code>.
 */
val CLASSES = Classes.CLASSES

/**
 * The table <code>ClassHierarchies</code>.
 */
val CLASSHIERARCHIES = Classhierarchies.CLASSHIERARCHIES

/**
 * The table <code>ClassInnerClasses</code>.
 */
val CLASSINNERCLASSES = Classinnerclasses.CLASSINNERCLASSES

/**
 * The table <code>Fields</code>.
 */
val FIELDS = Fields.FIELDS

/**
 * The table <code>MethodParameters</code>.
 */
val METHODPARAMETERS = Methodparameters.METHODPARAMETERS

/**
 * The table <code>Methods</code>.
 */
val METHODS = Methods.METHODS

/**
 * The table <code>OuterClasses</code>.
 */
val OUTERCLASSES = Outerclasses.OUTERCLASSES

/**
 * The table <code>Symbols</code>.
 */
val SYMBOLS = Symbols.SYMBOLS
