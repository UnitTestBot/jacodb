/*
 *  Copyright 2022 UnitTestBot contributors (utbot.org)
 * <p>
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * <p>
 *  http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package org.jacodb.impl.storage.jooq.tables.records


import org.jacodb.impl.storage.jooq.tables.Applicationmetadata
import org.jooq.Field
import org.jooq.Record1
import org.jooq.Row1
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ApplicationmetadataRecord() : TableRecordImpl<ApplicationmetadataRecord>(Applicationmetadata.APPLICATIONMETADATA), Record1<String?> {

    var version: String?
        set(value) = set(0, value)
        get() = get(0) as String?

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row1<String?> = super.fieldsRow() as Row1<String?>
    override fun valuesRow(): Row1<String?> = super.valuesRow() as Row1<String?>
    override fun field1(): Field<String?> = Applicationmetadata.APPLICATIONMETADATA.VERSION
    override fun component1(): String? = version
    override fun value1(): String? = version

    override fun value1(value: String?): ApplicationmetadataRecord {
        this.version = value
        return this
    }

    override fun values(value1: String?): ApplicationmetadataRecord {
        this.value1(value1)
        return this
    }

    /**
     * Create a detached, initialised ApplicationmetadataRecord
     */
    constructor(version: String? = null): this() {
        this.version = version
    }
}
