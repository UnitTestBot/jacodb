name: Build and run tests

on:
  push:
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    name: Build on JDK ${{ matrix.jdk }}

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk: [8, 11, 19]
    env:
      main_jdk: 8

    steps:
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.jdk }}
          distribution: 'zulu'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          # Only write to the cache for builds on the specific branches. (Default is 'main' only.)
          # Builds on other branches will only read existing entries from the cache.
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}

      - name: Build and run tests
        run: ./gradlew build --stacktrace --scan

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.jdk == env.main_jdk
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-jdk${{ matrix.jdk }}
          path: ./**/build/test-results/

      - name: Upload Gradle reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: gradle-reports-jdk${{ matrix.jdk }}
          path: ./**/build/reports/
          retention-days: 1

  publish-test-results:
    name: Publish test results

    runs-on: ubuntu-latest
    needs: build
    if: always()

    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "artifacts/**/*.xml"
